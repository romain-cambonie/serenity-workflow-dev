# This is a Work In Progress
# Example usage
# my-replication-job:
#   uses: romain-cambonie/serenity-workflows/.github/workflows/replicate-db.use-case.yml@master
#   with:
#     application-name: 'my-app'
#     addon-plan-postgresql: 'postgresql-starter-1024'
#     extensions: 'postgis,hstore'
#   secrets:
#     SCALINGO_API_TOKEN: ${{ secrets.SCALINGO_API_TOKEN }}

name: Replicate db

on:
  workflow_call:
    inputs:
      application-name:
        required: true
        type: string
      addon-plan-postgresql:
        required: true
        type: string
      extensions:
        required: false
        type: string
        default: ''
    secrets:
      SCALINGO_API_TOKEN:
        required: true
      REMOTE_DATABASE_URL:
        required: true

jobs:
  create-application-on-scalingo:
    uses: romain-cambonie/serenity-workflows/.github/workflows/_prepare-application-and-keys.scalingo.reusable.yml@master
    with:
      application-name: ${{ inputs.application-name }}
    secrets:
      SCALINGO_API_TOKEN: ${{ secrets.SCALINGO_API_TOKEN }}

  setup-database-addon:
    needs:
      - create-application-on-scalingo
    uses: romain-cambonie/serenity-workflows/.github/workflows/_setup-addon.postgresql.scalingo.reusable.yml@master
    with:
      application-name: ${{ inputs.application-name }}
      addon-plan-postgresql: ${{ inputs.addon-plan-postgresql }}
    secrets:
      SCALINGO_API_TOKEN: ${{ secrets.SCALINGO_API_TOKEN }}

  wait-addon-running:
    needs:
      - setup-database-addon
    uses: romain-cambonie/serenity-workflow-dev/.github/workflows/_wait-addon-status.scalingo.reusable.yml@master
    with:
      application-name: ${{ inputs.application-name }}
      addon-name: 'PostgreSQL'
      status: 'running'
      interval: 15
      attempts: 7
    secrets:
      SCALINGO_API_TOKEN: ${{ secrets.SCALINGO_API_TOKEN }}


  # TODO Change target workflow to
  # romain-cambonie/serenity-workflows/.github/workflows/_create-extension.postgresql.scalingo.reusable.yml@master
  # when ready
  install-postgresql-extensions:
    needs:
      - setup-database-addon
      - wait-addon-running
    if: wait-addon-running.outputs.status-reached == 'true' && inputs.extensions != ''
    uses: romain-cambonie/serenity-workflow-dev/.github/workflows/_create-extension.postgresql.scalingo.reusable.yml@master
    with:
      extensions-as-comma-separated-string: ${{ inputs.extensions }}
      application-name: ${{ inputs.application-name }}
    secrets:
      SCALINGO_API_TOKEN: ${{ secrets.SCALINGO_API_TOKEN }}

  replicate-remote-db:
    if: needs.install-postgresql-extensions.result == 'success' || needs.install-postgresql-extensions.result != 'skipped'
    needs:
      - install-postgresql-extensions
    uses: ./.github/workflows/_replicate-db.postgresql.scalingo.reusable.yml
    with:
      application-name: ${{ inputs.application-name }}
    secrets:
      SCALINGO_API_TOKEN: ${{ secrets.SCALINGO_API_TOKEN }}
      REMOTE_DATABASE_URL: ${{ secrets.REMOTE_DATABASE_URL }}

#  notify-discord:
#    if: ${{ needs.dynamic-variables.outputs.is-discord-hooked == 'true' }}
#    needs:
#      - dynamic-variables
#      - clone-immersion-pe-db
#    uses: ./.github/workflows/_notify-deployment.discord.reusable.yml
#    with:
#      deployer-name: "Scalingo Back Deployer"
#      application-name: ${{ needs.dynamic-variables.outputs.application-name }}
#      deployed-domain: ${{ needs.dynamic-variables.outputs.deployed-domain }}
#    secrets:
#      DISCORD_NOTIFY_HOOK_URL: ${{ secrets.DISCORD_NOTIFY_HOOK_URL }}
