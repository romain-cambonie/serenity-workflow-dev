# Abstract
# This workflow create a viable matrix for jobs parallelisation.

# Usage: set this workflows as a dependency of your matrixed job.

#tasks-from-string:
#  uses: romain-cambonie/serenity-workflow-dev/.github/workflows/_matrix-from-string.reusable.yml@master
#  with:
#    input-string: 'lint,prettier,test'
#    separator: ','
#    field: 'task'

#execute-with-matrix:
#  name: ' '
#  runs-on: ubuntu-latest
#  needs:
#    - tasks-from-string
#  strategy:
#    fail-fast: true
#    matrix:
#      task: ${{ fromJSON(needs.get-commands.outputs.matrix) }}
#
#  steps:
#    - name: ${{matrix.task}}
#      env:
#        COMMAND: ${{matrix.task}}
#      run: echo $COMMAND

# commands-matrix-as-string input example: '[lint, "prettier:check", "test:unit"]'

name: zReusable Parse Matrix Workflow

on:
  workflow_call:
    inputs:
      input-string:
        required: true
        type: string
      separator:
        required: true
        type: string
      field:
        required: true
        type: string

    outputs:
      matrix:
        description: 'The resulting matrix from parsing'
        value: ${{ jobs.set-matrix.outputs.matrix }}
jobs:
  set-matrix:
    name: 'Set matrix from string'
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.fields.outputs.matrix }}

    steps:
      - name: Set matrix from string
        id: fields
        run: |
          ARRAY=$(jq -r '.${{ inputs.field }} | split("${{ inputs.separator }}")' <<< '{"${{ inputs.field }}": "${{ inputs.input-string }}"}')
          ARRAY_WITHOUT_WHITESPACES=$(echo $ARRAY | sed 's/ //g')
          echo "::set-output name=matrix::$ARRAY_WITHOUT_WHITESPACES"