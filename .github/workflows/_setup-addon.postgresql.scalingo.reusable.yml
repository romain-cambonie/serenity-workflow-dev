name: zReusable Scalingo Postgresql Addon Setup

on:
  workflow_call:
    inputs:
      application-name:
        required: true
        type: string

      addon-plan-postgresql:
        required: true
        type: string

    secrets:
      SCALINGO_API_TOKEN:
        required: true

    outputs:
      status:
        description: "'addon-created' or 'addon-existed-previously' if successful"
        value: ${{ jobs.postgresql-addon-check-or-create.outputs.status }} }}

jobs:
  addon-postgresql:
    name: Add the postgresql addon if not present
    runs-on: ubuntu-latest
    container:
      image: rcambonie/scalingo-cli

    outputs:
      status: ${{ steps.postgresql-addon-check-or-create.outputs.status }}

    steps:
      - name: Login with api-token
        run: scalingo login --api-token=${{ secrets.SCALINGO_API_TOKEN }}

      - name: Create PostgreSQL addon with the given plan if not present, does not check the plan level
        id: postgresql-addon-check-or-create
        run: >-
          if 
          (( $(scalingo -a ${{ inputs.application-name }} addons | grep -c '${{ inputs.addon-name }}.*running' ) >= 1 ));
          then echo "Addon already exist"; echo "::set-output name=status::'addon-existed-previously'";
          else echo "Creating addon"; 
          scalingo --app ${{ inputs.application-name }} addons-add postgresql ${{ inputs.addon-plan-postgresql }}
          && echo "::set-output name=status::'addon-created';
          fi;