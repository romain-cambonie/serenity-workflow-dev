# Payload example (as json)
# {
#    "type":"vars",
#    "attributes": {
#      "key":"some_key",
#      "value":"some_value",
#      "description":"some description",
#      "category":"terraform",
#      "hcl":false,
#      "sensitive":false
#    }
# }
#

# 'https://app.terraform.io/api/v2/organizations/:organization_name/workspaces/:name
# json response => id
name: zReusable Terraform get organisation workspace id

on:
  workflow_call:
    inputs:
      organisation-name:
        required: true
        type: string
      workspace-name-with-prefix:
        required: true
        type: string
      terraform-api-organizations-endpoint:
        required: false
        type: string
        default: 'https://app.terraform.io/api/v2/organizations/'

    secrets:
      TF_API_TOKEN:
        required: true

    outputs:
      workspace-id:
        description: 'The workspace id on terraform cloud'
        value: ${{ jobs.get-workspace-id.outputs.workspace-id }}

jobs:
  get-workspace-id:
    runs-on: ubuntu-latest
    outputs:
      workspace-id: ${{ steps.get-workspace-id.outputs.workspace-id }}
    steps:
      - name: Execute api request
        id: get-workspace-id
        run: >-
          curl 
          --header "Authorization: Bearer ${{ secrets.TF_API_TOKEN }}" 
          --header "Content-Type: application/vnd.api+json" 
          --request GET 
          ${{ inputs.terraform-api-organizations-endpoint }}${{ inputs.organisation-name }}/workspaces/${{ inputs.workspace-name-with-prefix }}
          | jq '.data.id'
          
          WORKSPACE_ID=$?
          
          echo "::set-output name=workspace-id::$WORKSPACE_ID"
