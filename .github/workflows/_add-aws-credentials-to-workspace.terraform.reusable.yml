name: zReusable - Add AWS credentials to workspace

on:
  workflow_call:
    inputs:
      workspace-name:
        required: true
        type: string
      organisation-name:
        required: true
        type: string
      terraform-api-organizations-endpoint:
        required: false
        type: string
        default: 'https://app.terraform.io/api/v2/organizations/'

    secrets:
      TF_API_TOKEN:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

jobs:
  # Copy of _get-workspace-id.terraform.reusable.yml, using raw for call depth issues
  get-workspace-id:
    runs-on: ubuntu-latest
    outputs:
      workspace-id: ${{ steps.get-workspace-id.outputs.workspace-id }}
    steps:
      - name: Execute api request
        id: get-workspace-id
        run: >-
          WORKSPACE_ID=$(curl 
          --header "Authorization: Bearer ${{ secrets.TF_API_TOKEN }}" 
          --header "Content-Type: application/vnd.api+json" 
          --request GET 
          ${{ inputs.terraform-workspace-variables-api-endpoint }}${{ inputs.organisation-name }}/workspaces/${{ inputs.workspace-name }}
          | jq '.id')
          
          echo "::set-output name=workspace-id::$WORKSPACE_ID"

  json-payloads:
    runs-on: ubuntu-latest
    outputs:
      aws-access-key-id-payload: ${{ steps.aws-access-key-id-payload.outputs.payload }}
      aws-secret-access-key-payload: ${{ steps.aws-secret-access-key-payload.outputs.payload }}

    steps:
      - name: Generate aws access key id payload
        id: aws-access-key-id-payload
        run: >-
          AWS_ACCESS_KEY_ID_JSON_PAYLOAD=$(
          jq
          '{
            type: "vars",
              attributes: {
                key: "AWS_ACCESS_KEY_ID",
                value: ${{ secrets.AWS_ACCESS_KEY_ID }},
                description:"Aws access key id",
                category:"env",
                hcl:false,
                sensitive: true
              }
          }' | 
          sed 's/ //g'
          )
          
          echo "::set-output name=payload::$AWS_ACCESS_KEY_ID_JSON_PAYLOAD"

      - name: Generate aws secret access key payload
        id: aws-secret-access-key-payload
        run: >-
          AWS_SECRET_ACCESS_KEY_JSON_PAYLOAD=$(
          jq
          '{
            type: "vars",
              attributes: {
                key: "AWS_SECRET_ACCESS_KEY",
                value: ${{ secrets.AWS_SECRET_ACCESS_KEY }},
                description:"Aws access key secret",
                category:"env",
                hcl:false,
                sensitive: true
              }
          }' | 
          sed 's/ //g'
          )

          echo "::set-output name=payload::$AWS_SECRET_ACCESS_KEY_JSON_PAYLOAD"

  # Copy of _set-workspace-variable.terraform.reusable.yml, using raw for call depth issues
  set-workspace-variable:
    runs-on: ubuntu-latest
    needs:
      - json-payloads
    strategy:
      matrix:
        credential: [${{ needs.json-payloads.outputs.aws-access-key-id-payload }},${{ needs.json-payloads.outputs.aws-secret-access-key-payload }}]
    steps:
      - name: Set credential on workspace
        run: >-
          curl
          --header "Authorization: Bearer ${{ secrets.TF_API_TOKEN }}"
          --header "Content-Type: application/vnd.api+json"
          --request POST
          --data ${{ matrix.credential }}
          ${{ inputs.terraform-workspace-api-endpoint }}${{ inputs.workspace-id }}/vars

#  set-key-id:
#    needs:
#      - get-workspace-id
#      - json-payloads
#    uses: romain-cambonie/serenity-workflow-dev/.github/workflows/_set-workspace-variable.terraform.reusable.yml@master
#    with:
#      workspace-id: ${{ needs.get-workspace-id.outputs.workspace-id }}
#      payload-as-json-string: ${{ needs.json-payloads.outputs.aws-access-key-id-payload }}
#    secrets:
#      TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
#
#  set-key-secret:
#    needs:
#      - get-workspace-id
#      - json-payloads
#    uses: romain-cambonie/serenity-workflow-dev/.github/workflows/_set-workspace-variable.terraform.reusable.yml@master
#    with:
#      workspace-id: ${{ needs.get-workspace-id.outputs.workspace-id }}
#      payload-as-json-string: ${{ needs.json-payloads.outputs.aws-secret-access-key-payload }}
#    secrets:
#      TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}